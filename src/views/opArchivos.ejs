<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Operación con Archivos</title>
    <%- include('partials/head') %>
</head>
<body>
    
    <%- include('partials/navigation') %>

    <center>

        <h1>Emulación de File System</h1>

        <div class="container-custom mt-4">
            <form method="post">
                <div class="form-ext">
                    <h2 class="text-center">Operaciones con Archivos</h2>
                    <div class="accordion" id="accordionExample">
                        <%- include('partials/crearArchivo') %>        
                    </div>
                </div>
            </form>
            <form method="post"></form>
                <div class="form-ext">
                    <div class="accordion" id="accordionExample">
                        <%- include('partials/guardarArchivo') %>
                    </div>
                </div>
            </form>
            <form method="post"></form>
                <div class="form-ext">
                    <div class="accordion" id="accordionExample">
                        <%- include('partials/eliminarArchivo') %>
                    </div>
                </div>
            </form>
            <form method="post"></form>
                <div class="form-ext">
                    <div class="accordion" id="accordionExample">
                        <%- include('partials/moverArchivo') %>
                    </div>
                </div>
            </form>
        </div>
        
    </center>
    
    <!-- JavaScript para manejar el formulario de Crear Archivo -->
    <script>
        document.getElementById('crearArchivoBtn').addEventListener('click', function(e) {
            e.preventDefault(); // Evitar que se recargue la página al enviar el formulario
    
            const nombreArchivo = document.getElementById('nombreArchivo').value.trim();
            const tipoArchivo = document.getElementById('tipoArchivo').value;
            const pesoArchivo = document.getElementById('pesoArchivo').value.trim();
            const rutaArchivo = document.getElementById('rutaArchivo').value.trim();
    
            // Obtener el sistema de archivos desde localStorage
            const tipoSistema = localStorage.getItem('formatoSeleccionado')?.trim().toUpperCase();
    
            // Validar campos requeridos
            if (!nombreArchivo || !pesoArchivo || !rutaArchivo) {
                alert("Por favor, completa todos los campos");
                return;
            }
    
            // Determinar la URL según el sistema de archivos
            let url;
            if (tipoSistema === 'FAT32') {
                url = '/crearArchivoFat32';
            } else if (tipoSistema === 'NTFS') {
                url = '/crearArchivoNTFS';
            } else if (tipoSistema === 'EXT4') {
                url = '/crearArchivoExt4';
            }else {
                alert("Sistema de archivos no soportado");
                return;
            }
    
            // Enviar la petición usando fetch
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ nombreArchivo, tipoArchivo, pesoArchivo, rutaArchivo })
            })
            .then(response => {
                console.log('Código de estado de la respuesta:', response.status);
                if (!response.ok) {
                    throw new Error('Respuesta de red no ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Respuesta del servidor:', data);
                if (data.message) {
                    alert(data.message);
                } else {
                    alert('Respuesta inesperada del servidor');
                    console.warn('Propiedad "message" no encontrada en la respuesta:', data);
                }
            })
            .catch(error => {
                console.error('Error al crear archivo:', error);
                alert('Ocurrió un error al crear el archivo. Revisa la consola para más detalles.');
            });
        });
    </script>
    
    
    <!-- JavaScript para manejar el formulario de Guardar/Reemplazar Archivo -->
    <script>
        document.getElementById('guardarArchivoBtn').addEventListener('click', function (e) {
            e.preventDefault(); // Prevenir el comportamiento por defecto del formulario

            // Obtener los valores del formulario
            const nombreArchivoExistente = document.getElementById('nombreArchivoExistente').value.trim();
            const tipoArchivo = document.getElementById('tipoArchivoGuardar').value.trim();
            const rutaArchivoExistente = document.getElementById('rutaArchivoExistente').value.trim();
            const nombreArchivoNuevo = document.getElementById('nombreArchivoNuevo').value.trim();

            // Validar campos requeridos
            if (!nombreArchivoExistente || !nombreArchivoNuevo || !rutaArchivoExistente) {
                alert('Por favor, completa todos los campos.');
                return;
            }

            // Obtener el sistema de archivos desde localStorage
            const tipoSistema = localStorage.getItem('formatoSeleccionado')?.trim().toUpperCase();
            
            if (!tipoSistema) {
                alert("El sistema de archivos no está seleccionado. Asegúrate de que esté en el localStorage.");
                return;
            }

            // Determinar la URL según el sistema de archivos
            let url;
            if (tipoSistema === 'FAT32') {
                url = '/guardarArchivoFat32';
            } else if (tipoSistema === 'NTFS') {
                url = '/guardarArchivoNtfs';
            } else if (tipoSistema === 'EXT4') {
                url = '/guardarArchivoExt4';
            } else {
                alert("Sistema de archivos no soportado.");
                return;
            }

            // Enviar la petición usando fetch
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    nombreArchivoExistente,
                    tipoArchivo,
                    rutaArchivoExistente,
                    nombreArchivoNuevo
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Error en la solicitud: ${response.statusText}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Respuesta del servidor:', data);
                if (data.message) {
                    alert(data.message);
                } else {
                    alert('Error en la respuesta del servidor.');
                }
            })
            .catch(error => {
                console.error('Error en la solicitud:', error);
                alert('Ocurrió un error al guardar el archivo.');
            });
        });
    </script>
      

    <!-- JavaScript para manejar el formulario de Eliminar Archivo -->
    <script>
        function eliminarArchivo() {
            const nombreEliminar = document.getElementById('EliminarnombreEliminar').value.trim();
            const tipoEliminar = document.getElementById('EliminartipoEliminar').value;
            const rutaEliminar = document.getElementById('EliminarrutaEliminar').value.trim();

            // Obtener el sistema de archivos desde localStorage
            const tipoSistema = localStorage.getItem('formatoSeleccionado')?.trim().toUpperCase();

            // Validar que el tipo de sistema esté definido
            if (!tipoSistema) {
                alert("El sistema de archivos no está seleccionado. Asegúrate de que esté en el localStorage.");
                return;
            }

            // Determinar la URL según el sistema de archivos
            let url;
            if (tipoSistema === 'FAT32') {
                url = '/eliminarArchivoFat32';
            } else if (tipoSistema === 'NTFS') {
                url = '/eliminarArchivoNtfs';
            } else if (tipoSistema === 'EXT4') {
                url = '/eliminarArchivoExt4';
            } else {
                alert("Sistema de archivos no soportado");
                return;
            }

            // Enviar los datos al servidor usando fetch
            fetch(url, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ nombreEliminar, tipoEliminar, rutaEliminar })
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
            })
            .catch(error => {
                console.error('Error al eliminar el archivo:', error);
            });
        }
    </script>

    <!-- JavaScript para manejar el formulario de Mover Archivo -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            moverArchivo();  // Llama a la función cuando el DOM esté cargado
        });

        function moverArchivo() {
            document.getElementById('moverArchivoForm').addEventListener('submit', function(e) {
                e.preventDefault();  // Evita que el formulario se envíe de manera tradicional

                // Recoger los datos del formulario
                const nombreArchivo = document.getElementById('MovernombreArchivo').value.trim();
                const tipoArchivo = document.getElementById('MovertipoArchivo').value;
                const rutaArchivo = document.getElementById('MoverrutaArchivo').value.trim();
                const nuevaRutaArchivo = document.getElementById('MovernuevaRutaArchivo').value.trim();

                // Obtener el sistema de archivos desde localStorage
                const tipoSistema = localStorage.getItem('formatoSeleccionado')?.trim().toUpperCase();

                // Validar que el tipo de sistema esté definido
                if (!tipoSistema) {
                    alert("El sistema de archivos no está seleccionado. Asegúrate de que esté en el localStorage.");
                    return;
                }

                // Determinar la URL según el sistema de archivos
                let url;
                if (tipoSistema === 'FAT32') {
                    url = '/moverArchivoFat32';
                } else if (tipoSistema === 'NTFS') {
                    url = '/moverArchivoNtfs';
                } else if (tipoSistema === 'EXT4') {
                    url = '/moverArchivoExt4';
                } else {
                    alert("Sistema de archivos no soportado");
                    return;
                }

                // Enviar los datos al servidor usando fetch
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        nombreArchivo,
                        tipoArchivo,
                        rutaArchivo,
                        nuevaRutaArchivo
                    })
                })
                .then(response => response.json())
                .then(data => {
                    // Mostrar la respuesta del servidor en el DOM
                    const respuestaServidor = document.getElementById('respuestaServidor');
                    respuestaServidor.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                })
                .catch(err => {
                    // Mostrar el error si ocurre
                    const respuestaServidor = document.getElementById('respuestaServidor');
                    respuestaServidor.innerHTML = `<div class="alert alert-danger">Error al mover el archivo: ${err.message}</div>`;
                });
            });
        }
    </script>

</body>
</html>